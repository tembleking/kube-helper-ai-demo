helmDefaults:
  wait: true
  timeout: 1800

repositories:
  - name: open-webui
    url: https://helm.openwebui.com/
  - name: ollama-helm
    url: https://otwld.github.io/ollama-helm/
  - name: sysdig
    url: https://charts.sysdig.com
  - name: ingress-nginx
    url: https://kubernetes.github.io/ingress-nginx

releases:
  - name: ingress-nginx
    namespace: ingress-nginx
    chart: ingress-nginx/ingress-nginx
    createNamespace: true
    atomic: true
    version: 4.12.2
    values:
      - controller:
          ingressClassResource:
            default: true
  - name: open-webui
    namespace: open-webui
    chart: open-webui/open-webui
    createNamespace: true
    atomic: true
    version: 6.26.0
    needs: [ ingress-nginx/ingress-nginx ]
    values:
      - image:
          pullPolicy: IfNotPresent
          repository: ghcr.io/open-webui/open-webui
          tag: 0.6.18
      - ollama:
          enabled: false
        persistence:
          enabled: false # No need of persistence for now
        pipelines:
          enabled: false # Pipelines are enabled with other helm release
        extraEnvVars:
          - name: WEBUI_AUTH # No need to enable authentication
            value: "false"
          - name: ENABLE_OLLAMA_API
            value: "true"
          - name: ENABLE_EVALUATION_ARENA_MODELS
            value: "false" # We do not need arena models, this is just confusing for the trainees
          - name: OLLAMA_BASE_URL
            value: "http://ollama.ollama.svc.cluster.local:11434"
          - name: DEFAULT_MODELS
            value: llama3.1:8b
          - name: OPENAI_API_BASE_URL # This enables pipelines in the UI
            value: http://open-webui-pipelines.open-webui-pipelines.svc.cluster.local:9099
          - name: OPENAI_API_KEY
            value: 0p3n-w3bu!
          - name: ENABLE_FOLLOW_UP_GENERATION
            value: "false"
          - name: ENABLE_AUTOCOMPLETE_GENERATION
            value: "false"
          - name: ENABLE_TAGS_GENERATION
            value: "false"
          - name: ENABLE_WEBSOCKET_SUPPORT
            value: "false"
        resources:
          limits:
            ephemeral-storage: 2Gi
          requests:
            cpu: 500m
            ephemeral-storage: 2Gi
            memory: 2Gi
        service:
          annotations: {}
          containerPort: 8080
          labels: {}
          loadBalancerClass: ""
          nodePort: ""
          port: 80
          type: ClusterIP
        ingress:
          enabled: true
          host: open-webui.127-0-0-1.nip.io # To be edited later by the deploy script
  - name: open-webui-pipelines
    namespace: open-webui-pipelines
    chart: open-webui/pipelines
    createNamespace: true
    atomic: true
    version: 0.7.0
    values:
    - image:
        pullPolicy: Always
        repository: ghcr.io/tembleking/open-webui-pipelines
        tag: 0.0.4
    - ingress:
        enabled: false
      persistence:
        enabled: false
      serviceAccount:
        automountServiceAccountToken: true
    - extraEnvVars:
      - name: PIPELINES_URLS
        value: https://raw.githubusercontent.com/tembleking/kube-helper-ai-demo/master/helper.py
    hooks:
      - events: [prepare]
        command: bash
        args:
          - -c
          - |
            kubectl create namespace playground || true;
            kubectl create rolebinding open-webui-pipelines-playground-edit \
              --namespace playground \
              --clusterrole edit \
              --serviceaccount open-webui-pipelines:open-webui-pipelines || true;
            kubectl create clusterrole cluster-view --resource '*.*' --verb get --verb list --verb watch || true;
            kubectl create clusterrolebinding open-webui-pipelines-cluster-view \
              --clusterrole cluster-view \
              --serviceaccount open-webui-pipelines:open-webui-pipelines || true;
      - events: [preuninstall]
        command: bash
        args:
          - -c
          - |
            kubectl delete rolebinding open-webui-pipelines-playground-edit --namespace playground || true;
            kubectl delete namespace playground || true;
            kubectl delete clusterrolebinding open-webui-pipelines-cluster-view || true;
            kubectl delete clusterrole cluster-view || true;
            kubectl delete clusterrolebinding open-webui-pipelines-cluster-admin || true;
  - name: ollama
    namespace: ollama
    chart: ollama-helm/ollama
    createNamespace: true
    atomic: true
    version: 1.26.0
    values:
      - image:
          tag: 0.11.3
      - ollama:
          models:
            pull:
              - llama3.1:8b
              - gpt-oss:latest
            run:
              - llama3.1:8b
        nodeSelector: 
          cloud.google.com/gke-accelerator: nvidia-l4
          cloud.google.com/gke-accelerator-count: "1"
        resources:
          limits:        
            nvidia.com/gpu: 1
  - name: sysdig
    namespace: sysdig
    chart: sysdig/shield
    createNamespace: true
    atomic: true
    version: 1.12.6
    values:
      - cluster_config:
          name: {{ env "CLUSTER_NAME" | default "ai-demo-cluster" }}
          cluster_type: gke-autopilot
        sysdig_endpoint:
          region: {{ env "SYSDIG_REGION" | default "us2" }}
          access_key: {{ requiredEnv "SYSDIG_ACCESS_KEY" }}
        features:
          kubernetes_metadata:
            enabled: true
          posture:
            host_posture:
              enabled: true
            cluster_posture:
              enabled: true
          vulnerability_management:
            host_vulnerability_management:
              enabled: true
            container_vulnerability_management:
              enabled: true
            in_use:
              enabled: true
          detections:
            drift_control:
              enabled: true
            malware_control:
              enabled: true
            ml_policies:
              enabled: true
            kubernetes_audit:
              enabled: true
          investigations:
            activity_audit:
              enabled: true
            live_logs:
              enabled: true
            network_security:
              enabled: true
            audit_tap:
              enabled: true
            captures:
              enabled: true
          respond:
            response_actions:
              enabled: true
